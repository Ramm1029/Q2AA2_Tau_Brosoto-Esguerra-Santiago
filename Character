package game;

import java.util.ArrayList;

/**
 *
 * @author ramai
 */
public class Character {
    private String name;
    private int hp, speed, stamina, sightRadius, progress, position;
    private ArrayList<Item> inventory;

    public Character(String name, int hp, int speed, int stamina, int sightRadius) {
        this.name = name;
        this.hp = hp;
        this.speed = speed;
        this.stamina = stamina;
        this.sightRadius = sightRadius;
        progress = 0;
        position = 0;
        inventory = new ArrayList<Item>();
    }
    
    public void walk() {
        if (stamina > 0) {
            stamina -= 2;
            position += speed; 
        } else {
            System.out.println(name + " is too tired to walk.");
        }
    }

    public void sprint() {
        if (stamina >= 4) {
            stamina -= 4;
            position += speed * 2;
        } else {
            System.out.println(name + " is too tired to sprint.");
        }
    }
    public void pickUpItem(Item item){
        if (item != null) {
            inventory.add(item);
            System.out.println(name + " picked up " + item.getName());
        } else {
            System.out.println("There's nothing to pick up.");
        }
    }
    public void attackKiller(Killer killer) {
        Item weapon = inventory.get(0);
        int distance = Math.abs(killer.getPosition() - this.position);
        if (distance <= weapon.getRange()) {
            if (weapon.getDurability() > 0) {
                    killer.takeDamage(weapon.getDamage());
                    weapon.decreaseDurability();      
            }
        }
    }

    public void interactWithFixture(Fixture fixture) {
        if (fixture != null) {
            fixture.performFunction();
            System.out.println(name + " interacted with " + fixture.getName());
        } else {
            System.out.println("There's nothing to interact with.");
        }
    }
    public void enterRoom(Room room) {
        if (room != null && room.isAvailable()) {
            progress++;
            System.out.println(name + " entered " + room.getName());
        } else {
            System.out.println(room != null ? "The room is locked." : "No room to enter.");
        }
    }
    public boolean isAlive() { 
        return hp > 0; 
    }
    public void takeDamage(int damage) {
        hp -= damage;
        if (hp <= 0) {
            System.out.println(name + " has been killed.");
        } else {
            System.out.println(name + " took " + damage + " damage. HP: " + hp);
        }
    }
    
    public String getName(){
        return name;
    }
}


